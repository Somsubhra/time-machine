#!/usr/bin/env python

__author__ = "Somsubhra Bairi"

# All imports
import sys
from os import walk, stat, makedirs, path

# All constant definitions
TIME_MACHINE_DIR = '.timemachine'

# The time machine class
class TimeMachine:

	# Constructor for the time machine
	def __init__(self):
		# Unused
		pass

	# Initialize the time machine
	@staticmethod
	def init():
		makedirs(TIME_MACHINE_DIR)

	# Save the current version in time capsule
	@staticmethod
	def save():
		try:
			stat(TIME_MACHINE_DIR)
		except:
			TimeMachine.init()

# The Logger class
class Logger:

	# Constructor for the Logger class
	def __init__(self):
		# Unused
		pass

	# Log a message
	@staticmethod
	def log_message(message):
		print '\033[94m' + '-- ' + str(message) + '\033[0m'

	# Log an error
	@staticmethod
	def log_error(message):
		print '\033[91m' + 'Error: ' + str(message) + '\033[0m'

	# Log success
	@staticmethod
	def log_success(message):
		print '\033[92m' + 'Success: ' + str(message) + '\033[0m'

	# Log a result
	@staticmethod
	def log_usage(message):
		print '\033[93m' + 'Usage: ' + str(message) + '\033[0m'

def main():
	args = sys.argv

	if len(args) < 2:
		usage = '''
		timemachine save
		'''
		Logger.log_usage(usage)
		return

	if args[1] == 'save':
		TimeMachine.save()


if __name__ == "__main__":
	main()